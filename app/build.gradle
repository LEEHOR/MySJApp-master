apply plugin: 'com.android.application'
//编译时间
def BuildApkTime() {
    return new Date().format("yyyy-MM-dd-HH-mm", TimeZone.getTimeZone("GMT+08"))
}
//编译的AppName
def name = "登月"
//签名文件
def keyFile = file('shengjing.jks')

android {
    compileSdkVersion 29
    buildToolsVersion = '29.0.1'
    //签名信息
    signingConfigs {
        myConfig {
            storeFile keyFile
            storePassword "123456"
            keyAlias "key0"
            keyPassword "123456"
        }
    }

    defaultConfig {
        applicationId "com.shenjing.dengyuejinfu"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            // 设置支持的SO库架构，第三方给的so库哪几种架构，就配置这几种架构
            abiFilters 'armeabi-v7a','arm64-v8a','armeabi'
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            signingConfig signingConfigs.myConfig
            //混淆
            minifyEnabled true
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        release {
            buildConfigField "boolean", "LOG_RELEASE", "false"
            signingConfig signingConfigs.myConfig
            //混淆
            minifyEnabled true
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    //AS3.0版本--多渠道打包配置
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${name}_${BuildApkTime()}_.apk"
        }

    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation 'junit:junit:4.13-beta-3'
    androidTestImplementation 'androidx.test:runner:1.3.0-alpha02'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha02'

    //支付分享
    implementation project(':ShareModule')
    //杭州有盾
   // implementation project(':youDunModule')

    //butterknife
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'

    //dagger2
    implementation 'com.google.dagger:dagger:2.23.2'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.23.2'

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'
    //Json数据解析
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.1'

    //logging-interceptor
     implementation 'com.squareup.okhttp3:logging-interceptor:4.0.1'

    //rxjava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'

    // 1.如果是android 5.0以上的设备，只需要设置为multiDexEnabled true
    //2.（1）如果需要适配android 5.0以下的设备需要分包支持库，
    // （2）java代码中 继承MultiDexApplication 或者 在Application中attachBaseContext()方法添加MultiDex.install(this);
    implementation 'androidx.multidex:multidex:2.0.1'

    //Glide图片加载框架  4.7.1
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    //rxlifecycle
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.2'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.2'

    //阿里云盾实人认证
    implementation(name: 'oss-android-sdk-2.9.2', ext: 'aar')
    implementation(name: 'FaceLivenessOpen-2.1.6.15', ext: 'aar')
    implementation(name: 'rpsdk-3.1.0.1', ext: 'aar')
    implementation(name: 'SecurityGuardSDK-external-release-5.4.9901', ext: 'aar')
    implementation(name: 'SecurityBodySDK-external-release-5.4.79', ext: 'aar')
    implementation(name: 'NoCaptchaSDK-external-release-5.4.33', ext: 'aar')

    /** *----------------- 其它的三方库（Module  引入的自定义View等）  start-----------------  ****/

    // DatePick 效果的弹出选择框(日期选择)
  //  implementation 'com.bigkoo:pickerview:2.0.8'

    //仿支付宝密码
   // implementation 'com.jungly:gridPasswordView:0.3'

    // URL路由
    implementation 'com.alibaba:arouter-api:1.5.0'
    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'

    // android权限管理 https://github.com/yanzhenjie/AndPermission
    // implementation 'com.yanzhenjie:permission:2.0.0'
   // implementation 'com.yanzhenjie.alertdialog:alertdialog:1.0.0'

    //支持material风格的弹窗
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'

    //安卓工具类
    implementation 'com.blankj:utilcodex:1.25.9'

    //底部菜单
    implementation 'com.ashokvarma.android:bottom-navigation-bar:1.3.0'

    //eventbus
   // implementation 'org.greenrobot:eventbus:3.1.1'

    //简洁adapter
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.47'

    //图片轮播图
    implementation 'com.github.donkingliang:CustomBanner:1.1.3'

    //文字轮播，可垂直跑、可水平跑的跑马灯
    implementation 'com.superluo:textbannerview:1.0.5'

    //高德地图
    implementation 'com.amap.api:location:latest.integration'
}
